// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum Role {
  USER
  MEMBER
  ADMIN
}

enum Progress {
  READY
  GOING
  END
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  role          Role       @default(USER)
  accounts      Account[]
  sessions      Session[]
  portfolio     Portfolio?
  vocalsTasks   Task[]     @relation(name: "vocals")
  mixersTasks   Task[]     @relation(name: "mixers")
  drawersTasks  Task[]     @relation(name: "drawers")
  editersTasks  Task[]     @relation(name: "editers")
  designers     Task[]     @relation(name: "designers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id             Int       @id @default(autoincrement())
  title          String?
  content        String?
  deadline       DateTime?
  deadlineFinal  DateTime?
  deadlineRecode DateTime?
  deadlineMix    DateTime?
  deadlineDraw   DateTime?
  deadlineMovie  DateTime?
  deadlineDesign DateTime?
  embedLink      String?
  vocals         User[]    @relation(name: "vocals")
  mixers         User[]    @relation(name: "mixers")
  drawers        User[]    @relation(name: "drawers")
  editers        User[]    @relation(name: "editers")
  designers      User[]    @relation(name: "designers")
  progress       Progress  @default(READY)
  isEndRecode    Boolean   @default(false)
  isEndMix       Boolean   @default(false)
  isEndDraw      Boolean   @default(false)
  isEndMovie     Boolean   @default(false)
  isEndDesign    Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updateAt       DateTime  @updatedAt
}

model Portfolio {
  id     Int    @id @default(autoincrement())
  url    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}
