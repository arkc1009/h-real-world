// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum Role {
  USER
  MEMBER
  ADMIN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id        Int       @id @default(autoincrement())
  title     String?
  content   String?
  deadline  DateTime?
  embedLink String?
  type      String
  members   Member[]
  progress  Int       @default(0)
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
}

model Member {
  id        Int        @id @default(autoincrement())
  name      String?
  colorCode String?
  createAt  DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  Portfolio Portfolio?
  tasks     Task[]
}

model Portfolio {
  id       Int    @id @default(autoincrement())
  url      String
  member   Member @relation(fields: [memberId], references: [id])
  memberId Int    @unique
}
